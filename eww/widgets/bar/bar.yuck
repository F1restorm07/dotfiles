(defpoll volume
        :interval "5s"
        `pactl get-sink-volume @DEFAULT_SINK@ | grep "Volume:" | awk -F'/' '{print $2}'`)
(defpoll datetime
        :interval "1s"
        `date +%m.%d/%H:%M`
)

(defwidget bar_layout []
        (box
                ;; :orientation "v"
                (box
                        :class "bar"
                        :orientation "h"
                        ;; :space-evenly false
                        
                        (bar_left)
                        ;; (bar_right)
                )
        )
)
;; set top/left, middle, bottom/right containers
;; left -> current workspace, current window
;; right -> system stats (volume, bluetooth, brightness, memory, cpu, datetime, battery)

(defwidget bar_left []
        (box
                :class "bar_left"
                :orientation "h"
                :valign "center"
                :halign "start"
                :hexpand false
                :space-evenly false

                (box
                        :class "datetime"
                        :orientation "h"
                        :hexpand false

                        ;; (box :class "datetime_info" {formattime(EWW_TIME, "%m.%d/%H:%M")})
                        (box :class "datetime_info" datetime)
                )

                (box
                        :class "battery"
                        :orientation "h"
                        :hexpand false
                        ;; include status as well

                        (box
                                :class {EWW_BATTERY.macsmc-battery.status == "Charging" ? "batt_charging": ""}
                                {"batt[${EWW_BATTERY.macsmc-battery.capacity}%]"}
                        )
                )

        )
)

(defwidget bar_right []
        (box
                :class "bar_right"
                :orientation "h"
                :valign "center"
                :halign "end"
                :hexpand false
                :space-evenly false

                (box
                        :class "volume"
                        :halign "end"
                        :orientation "v"
                        :hexpand false
                        
                        (box :class "volume_info" {"${volume}"})
                        (label :class "bar_title" :halign "end" :text "vol")
                )

                ;; insert separator

                (sys_stats)

                ;; insert separator

                (box
                        :class "datetime"
                        :orientation "v"
                        :hexpand false

                        ;; (box :class "datetime_info" {formattime(EWW_TIME, "%m.%d/%H:%M")})
                        (label :class "bar_title" :halign "end" :text "datetime")
                )
                (box
                        :class "battery"
                        :orientation "v"
                        :hexpand false

                        (box :class "battery_info" {"${EWW_BATTERY.macsmc-battery.capacity}%"})
                        (label :class "bar_title" :halign "end" :text "batt")
                )
        )
)

(defwidget sys_stats []
        (box
                :class "sys_stats"
                :orientation "h"
                :valign "center"
                :halign "end"
                :hexpand false
                :space-evenly false
                
                (box
                        :class "cpu"
                        :halign "end"
                        :orientation "v"
                        :hexpand false
                        
                        (box :class "cpu_info" {"${round(EWW_CPU.avg, 1)}%"})
                        (label :class "bar_title" :halign "end" :text "cpu")
                )
                ;; insert gpu section here
                (box
                        :class "memory"
                        :halign "end"
                        :orientation "v"
                        :hexpand false
                        
                        ;; EWW_RAM displays usage in kilobytes, this converts to gigabytes
                        (box :class "memory_info" {"${round(EWW_RAM.used_mem / 1024 / 1024 / 1024, 2)} gb"})
                        (label :class "bar_title" :halign "end" :text "mem")
                )
        )
)

(defwidget bar_title_right []
        (box
                :class "bar_title_right"
                :orientation "h"
                :valign "center"
                :halign "end"
                :hexpand false
                :space-evenly false

                (box
                        :class "volume"
                        :halign "end"
                        :hexpand false
                        
                        "volume"
                )

                ;; insert separator

                (sys_title_stats)

                ;; insert separator

                (box
                        :class "datetime"
                        :orientation "h"
                        :hexpand false

                        "datetime"
                )
                (box
                        :class "battery"
                        :orientation "h"
                        :hexpand false

                        "battery"
                )
        )
)

(defwidget sys_title_stats []
        (box
                :class "sys_title_stats"
                :orientation "h"
                :valign "center"
                :halign "end"
                :hexpand false
                :space-evenly false
                
                (box
                        :class "cpu"
                        :halign "end"
                        :hexpand false
                        
                        "cpu"
                )
                ;; insert gpu section here
                (box
                        :class "memory"
                        :halign "end"
                        :hexpand false
                        
                        "memory"
                )
        )
)

;; ---------------------------------------------------

(defwindow bar
        :geometry (geometry
                :width "5%"
                :height "50px"
                :anchor "bottom left"
        )
        :stacking "bg"
        :exclusive true
        :monitor 0

        (bar_layout)
)

;; vim:filetype=yuck
